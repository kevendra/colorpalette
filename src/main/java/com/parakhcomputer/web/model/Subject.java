package com.parakhcomputer.web.model;

// Generated Mar 2, 2011 10:24:17 PM by Hibernate Tools 3.3.0.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Subject generated by hbm2java
 */
@Entity
@Table(name = "subject")
public class Subject implements java.io.Serializable {


	private static final long serialVersionUID = 4308285288025781389L;
	private Integer subjectId;
	private String name;
	private String description;
	private int class_;
	private Integer groupId;
	private int seq;
	private int max;
	private int min;

//	private Set<Marks> marks = new HashSet<Marks>(0);
	private Date created = null;
	
	public Subject() {
	}

	public Subject(String name, String description, int seq,int max, int min) {
		this.name = name;
		this.description = description;
		this.seq = seq;
		this.max = max;
		this.min = min;
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "Subject_ID", unique = true, nullable = false)
	public Integer getSubjectId() {
		return this.subjectId;
	}

	public void setSubjectId(Integer subjectId) {
		this.subjectId = subjectId;
	}

	@Column(name = "Name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Description", nullable = false, length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Class", nullable=true)
	public int getClass_() {
		return this.class_;
	}

	public void setClass_(int class_) {
		this.class_ = class_;
	}	
	@Column(name = "Group_ID")
	public Integer getGroupId() {
		return this.groupId;
	}

	public void setGroupId(Integer groupId) {
		this.groupId = groupId;
	}

	@Column(name = "seq", nullable = false)
	public int getSeq() {
		return this.seq;
	}

	public void setSeq(int seq) {
		this.seq = seq;
	}

	@Column(name = "Max", nullable = false)
	public int getMax() {
		return this.max;
	}

	public void setMax(int max) {
		this.max = max;
	}

	@Column(name = "Min", nullable = false)
	public int getMin() {
		return this.min;
	}

	public void setMin(int min) {
		this.min = min;
	}
	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "exam")
	   /**
	    * Gets list of <code>School</code>es.
	    */
/*	   @OneToMany(fetch=FetchType.EAGER, cascade=CascadeType.ALL)
	   @JoinColumn(name="SUBJECT_ID", nullable=false)	
	public Set<Marks> getMarks() {
		return this.marks;
	}

	public void setMarks(Set<Marks> marks) {
		this.marks = marks;
	}*/
    

    /**
     * Gets date created.
     */
    public Date getCreated() {
        return created;
    }

    /**
     * Sets date created.
     */
    public void setCreated(Date created) {
        this.created = created;
    }

    /**
     * Returns a string representation of the object.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();

        sb.append(this.getClass().getName() + "-");
//TODO        sb.append("  addressId=" + addressId);
        
        return sb.toString();
    }

    /**
     * Returns a hash code value for the object.
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;

        result = prime * result + ((this.subjectId == null) ? 0 : this.subjectId.hashCode());

        return result;
    }

    /**
     * Indicates whether some other object is equal to this one.
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
/*
 * TODO
        final Caste other = (Caste) obj;

        if (this.casteId == null) {
            if (other.casteId != null)
                return false;
        } else if (!this.casteId.equals(other.casteId)) {
            return false;
        }

*/
        return true;
    }

}



